version: "3.8"

services:
  users-service:
    image: fastapi-users-service:latest
    container_name: service
    build:
      context: ./src/
      dockerfile: Dockerfile
    develop:
      watch:
        - action: sync
          path: ./src/
          target: ./app/
    ports:
      - "80:80"
    restart: always
    depends_on:
      - postgres
      - redis
    networks:
      - fastapi-users-network

  postgres:
    container_name: postgres-users
    image: postgres:16-alpine
    restart: always
    env_file: ./.env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    expose:
      - "${POSTGRES_PORT}"
    volumes:
      - ./postgres/docker-entrypoint.sh:/docker-entrypoint-initdb.d/docker-entrypoint.sh
    networks:
      - fastapi-users-network

  redis:
    image: redis:latest
    container_name: redis-users-cache
    restart: always
    env_file: ./.env
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    expose:
      - "${REDIS_PORT}"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - fastapi-users-network

networks:
  fastapi-users-network:
    name: fastapi-users-network
    driver: bridge